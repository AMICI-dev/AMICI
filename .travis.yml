language: generic
sudo: required

branches:
  only:
    - master
    - staging

matrix:
  fast_finish: true
  include:
    - os: linux
      before_install: 
            - sudo apt-get install libhdf5-serial-dev zlib1g-dev libatlas-base-dev valgrind lcov cppcheck  libboost-serialization-dev
            - sudo add-apt-repository -y 'deb http://us.archive.ubuntu.com/ubuntu/ xenial main universe restricted'
            - sudo add-apt-repository -y 'deb http://gb.archive.ubuntu.com/ubuntu/ xenial-updates main restricted'
            - sudo apt-get update -q
            - sudo apt-get install swig3.0 g++-4.9
            # full support of <regex> requires gcc4.9
            - export CC="gcc-4.9" CXX="g++-4.9"
            # Python distutils only looks for `swig` and does not find `swig3.0`
            - mkdir -p ~/bin/ && ln -s /usr/bin/swig3.0 ~/bin/swig && export PATH=~/bin/:$PATH
            - pyenv shell 2.7 3.6
      compiler: gcc
      env: ENABLE_GCOV_COVERAGE=TRUE
      after_success: 
        - ./scripts/run-codecov.sh
        - bash <(curl -s https://codecov.io/bash) -f coverage.info -X fix -F cpp
        - bash <(curl -s https://codecov.io/bash) -f coverage_py.xml -F python
        
    - os: osx
      osx_image: xcode9.3
      compiler: clang
      before_install:
        - brew update # without this homebrew can stumble over wrong ruby version
        - travis_wait brew install gcc || brew link --overwrite gcc # fix linker warning regarding /usr/local/include/c++
        - travis_wait brew install hdf5 cppcheck swig doxygen ragel graphviz homebrew/cask/mactex
        - brew upgrade python
        - export PATH=/Users/travis/Library/Python/3.7/bin:/Library/TeX/texbin:$PATH
      after_success: 
        - cd $BASE_DIR # cd to base dir for correct relative path in deploy
      deploy:
        provider: pages
        local-dir: doc
        skip-cleanup: true
        github-token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
        keep-history: false
        verbose: true
        on:
          branch: master

install:
    - export BASE_DIR=`pwd`
    - pip3 install --user --upgrade pip==9.0.3 setuptools wheel pkgconfig doxypypy scipy # pinning pip because of https://github.com/pypa/pip/issues/5240
    - ./scripts/buildSuiteSparse.sh
    - ./scripts/buildSundials.sh
    - ./scripts/buildCpputest.sh

script:  
#    - cd $BASE_DIR/python/sdist
#    - python3 setup.py sdist --dist-dir=$BASE_DIR/build/python/
#    - python3 -m pip install $BASE_DIR/build/python/amici-*.tar.gz --verbose
    - ./scripts/buildAmici.sh
    - cd $BASE_DIR
    - ./scripts/run-cpputest.sh
    - ./scripts/run-cppcheck.sh
    - cd $BASE_DIR/build
    - make python-tests
    - cd $BASE_DIR
    - scripts/runNotebook.sh python/examples/example_*/
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./scripts/run-valgrind.sh; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ./scripts/run-doxygen.sh; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$TRAVIS_EVENT_TYPE" == "cron" ]]; then ./scripts/run-SBMLTestsuite.sh; fi

after_failure:
    - ls -alR

# cache dependencies
cache: 
  - pip
