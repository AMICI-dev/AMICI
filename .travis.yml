language: generic
sudo: true

branches:
  only:
    - master
    - staging

matrix:
  include: 
    - os: linux
      dist: xenial
      compiler: gcc
#      addons:
#        apt:
#          update: true
#          packages:
#            - libhdf5-dev
#            - libhdf5-cpp-100 
#            - libhdf5-100
#            - zlib1g-dev
#            - libatlas-base-dev
#            - valgrind
#            - lcov
#            - graphviz
#            - doxygen
#            - doxygen-latex
#            - cppcheck
#            - swig3.0
#            - libboost-serialization-dev
      env: ENABLE_GCOV_COVERAGE=TRUE
      before_install: 
        - gem install coveralls-lcov
        - sudo add-apt-repository -y "deb http://us.archive.ubuntu.com/ubuntu/ artful main universe"
        - sudo apt-get update
        - sudo apt-get install libhdf5-dev libhdf5-cpp-100 libhdf5-100 zlib1g-dev libatlas-base-dev valgrind lcov graphviz doxygen doxygen-latex cppcheck swig3.0 libboost-serialization-dev
      after_success: 
        - ./scripts/run-coveralls.sh
    - os: osx
      osx_image: xcode9.3
      compiler: clang
      before_install: 
        - brew update # without this homebrew can stumble over wrong ruby version
        - travis_wait brew install gcc || brew link --overwrite gcc # fix linker warning regarding /usr/local/include/c++
        - brew install hdf5 cppcheck swig
        - brew upgrade python
        
install:
    # Python distutils only looks for `swig` and does not find `swig3.0`
    - export BASE_DIR=`pwd`
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mkdir -p ~/bin/ && ln -s /usr/bin/swig3.0 ~/bin/swig && export PATH=~/bin/:$PATH; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then pyenv versions; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then pyenv shell 2.7 3.6; fi
    - pip3 install --user --upgrade pip setuptools wheel pkgconfig doxypypy
    - ./scripts/buildSuiteSparse.sh
    - ./scripts/buildSundials.sh
    - ./scripts/buildCpputest.sh
    - ./scripts/buildAmici.sh

script:  
    - ./scripts/run-cpputest.sh
    - ./scripts/run-cppcheck.sh
    - cd $BASE_DIR/build && make python-tests && cd $BASE_DIR
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./scripts/run-valgrind.sh; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./scripts/run-doxygen.sh; fi

after_failure:
    - ls -alR

notifications:
  webhooks: 
    urls:
      - https://icb-mmost.helmholtz-muenchen.de/hooks/ux65x1zqbpr8xy7nr9sexidhgy
    on_success: change
