branches:
  only:
    - master
    - develop
    # Version tags
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

matrix:
  fast_finish: true
  include:
    - os: linux
      dist: xenial
      language: python
      python: 3.7
      compiler: gcc
      addons:
        apt:
          packages:
            - libhdf5-serial-dev
            - zlib1g-dev
            - libatlas-base-dev
            - lcov
            - libboost-serialization-dev
            - swig3.0
            - g++-5
            - cppcheck
            - libc6-dbg
      env:
        - ENABLE_GCOV_COVERAGE=TRUE
        - CI_MODE=test
      before_install:
        - ./scripts/buildValgrind.sh
      after_script:
        - bash <(curl -s https://codecov.io/bash) -f coverage.info -X fix -F cpp
        - bash <(curl -s https://codecov.io/bash) -f coverage_py.xml -F python
      before_deploy:
        - cd $BASE_DIR
      deploy:
        skip_cleanup: true
        provider: script
        script: scripts/deployPyPi.sh
        on:
          branch: master
          tags: true

    - os: osx
      osx_image: xcode10.1
      language: minimal
      compiler: clang
      env:
        - CI_MODE=test
      addons:
        homebrew:
          packages:
            - hdf5
            - swig
            - gcc
      before_install:
        - travis_wait brew link --overwrite gcc # fix linker warning regarding /usr/local/include/c++
        - export -f travis_fold travis_nanoseconds travis_time_start travis_time_finish
        - pip3 install --user -U numpy
      after_success:
        - cd $BASE_DIR # cd to base dir for correct relative path in deploy

    - os: osx
      osx_image: xcode10.1
      language: minimal
      compiler: clang
      env:
        - CI_MODE=deploy
      addons:
        homebrew:
          casks:
            - mactex
          packages:
            - doxygen
            - ragel
            - graphviz
      before_install:
        - export PATH=/Users/travis/Library/Python/3.7/bin:/Library/TeX/texbin:$PATH
        - export -f travis_fold travis_nanoseconds travis_time_start travis_time_finish
      after_success:
        - cd $BASE_DIR # cd to base dir for correct relative path in deploy
      deploy:
        provider: pages
        local-dir: doc
        skip-cleanup: true
        github-token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
        keep-history: false
        verbose: true
        on:
          branch: master

install:
    - export BASE_DIR=`pwd`
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mkdir -p ~/bin/ && ln -s /usr/bin/swig3.0 ~/bin/swig && export PATH=~/bin/:$PATH; fi # Python distutils only looks for `swig` and does not find `swig3.0`
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PYTHON_EXECUTABLE=$(which python3); fi # cmake wont be able to find python3 on its own ...
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$CI_MODE" == "test" ]]; then pip3 install --upgrade pip==9.0.3 setuptools wheel pkgconfig scipy; fi
    - if [[ "$TRAVIS_OS_NAME" != "linux" ]] && [[ "$CI_MODE" == "test" ]]; then pip3 install --user --upgrade pip==9.0.3 setuptools wheel pkgconfig scipy; fi
    - if [[ "$CI_MODE" == "deploy" ]]; then pip3 install --user --upgrade pip==9.0.3 doxypypy; fi # pinning pip because of https://github.com/pypa/pip/issues/5240
    - if [[ "$CI_MODE" == "test" ]]; then ./scripts/buildSuiteSparse.sh; fi
    - if [[ "$CI_MODE" == "test" ]]; then ./scripts/buildSundials.sh; fi
    - if [[ "$CI_MODE" == "test" ]]; then ./scripts/buildCpputest.sh; fi
    - if [[ "$CI_MODE" == "test" ]]; then ./scripts/buildBNGL.sh; fi
    - if [[ "$CI_MODE" == "test" ]]; then ./scripts/buildAmici.sh; fi
    - if [[ "$CI_MODE" == "test" ]]; then ./scripts/installAmiciArchive.sh; fi
    - if [[ "$CI_MODE" == "test" ]]; then ./scripts/installAmiciSource.sh; fi

script:
    - export -f travis_fold travis_nanoseconds travis_time_start travis_time_finish
    - export FOLD=$BASE_DIR/scripts/travis_wrap.sh
    - cd $BASE_DIR
    - if [[ "$CI_MODE" == "test" ]]; then $FOLD notebooks "cd $BASE_DIR && scripts/runNotebook.sh python/examples/example_*/"; fi
    - if [[ "$TRAVIS_OS_NAME" != "linux" ]] && [[ "$CI_MODE" == "test" ]]; then $FOLD cpputest ./scripts/run-cpputest.sh; fi
    - if [[ "$TRAVIS_OS_NAME" != "linux" ]] && [[ "$CI_MODE" == "test" ]]; then $FOLD python-tests ./scripts/run-python-tests.sh; fi
    - if [[ "$TRAVIS_OS_NAME" != "linux" ]] && [[ "$CI_MODE" == "test" ]]; then $FOLD python-tests ./tests/testCMakeCompilation.sh; fi
    - if [[ "$CI_MODE" == "deploy" ]]; then $FOLD doxygen ./scripts/run-doxygen.sh; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$CI_MODE" == "test" ]]; then $FOLD cppcheck ./scripts/run-cppcheck.sh; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$CI_MODE" == "test" ]]; then $FOLD valgrind ./scripts/run-valgrind.sh; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$CI_MODE" == "test" ]]; then $FOLD codecov ./scripts/run-codecov.sh; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$TRAVIS_EVENT_TYPE" == "cron" ]]; then $FOLD sbmltestsuite ./scripts/run-SBMLTestsuite.sh; fi

after_failure:
    - $FOLD ls -alR

# cache dependencies
cache:
  directories:
    - $HOME/Library/Caches/Homebrew
    - $HOME/Library/Caches/pip
    - $HOME/.cache/pip
  timeout: 1200

before_cache:
  - brew cleanup
