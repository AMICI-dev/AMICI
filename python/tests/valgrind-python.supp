#
# This is a valgrind suppression file that should be used when using valgrind.
#
#  Here's an example of running valgrind:
#
#	cd python/dist/src
#	valgrind --tool=memcheck --suppressions=Misc/valgrind-python.supp \
#		./python -E -tt ./Lib/test/regrtest.py -u bsddb,network
#
# You must edit Objects/obmalloc.c and uncomment Py_USING_MEMORY_DEBUGGER
# to use the preferred suppressions with Py_ADDRESS_IN_RANGE.
#
# If you do not want to recompile Python, you can uncomment
# suppressions for PyObject_Free and PyObject_Realloc.
#
# See Misc/README.valgrind for more information.

# all tool names: Addrcheck,Memcheck,cachegrind,helgrind,massif

#
# Leaks (including possible leaks)
#   Hmmm, I wonder if this masks some real leaks.  I think it does.
#   Will need to fix that.
#

{
   Suppress leaking the GIL.  Happens once per process, see comment in ceval.c.
   Memcheck:Leak
   fun:malloc
   fun:PyThread_allocate_lock
   fun:PyEval_InitThreads
}

#
# libsbml
#

{
   libsbml
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_wrap_SBase_getListOfAllElementsFromPlugins
}

{
   libsbml
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_wrap_SBase_getListOfAllElements
}

{
   libsbml
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_wrap_SBMLReader_readSBML
}

#
# numpy
#

{
   pyx_pymod
   Memcheck:Leak
   fun:malloc
   ...
   fun:__pyx_pymod_exec_*
}

{
   numpy
   Memcheck:Leak
   fun:malloc
   ...
   fun:__pyx_pw_5numpy_6random_13bit_generator_12BitGenerator_1__init__
}

{
   numpy
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   obj:/usr/bin/python3.?
   ...
   fun:gentype_generic_method
}

#
# scipy
#

{
   _csparsetools
   Memcheck:Leak
   fun:malloc
   ...
   obj:*/_csparsetools.cpython-3*-x86_64-linux-gnu.so
}

#
# module loading
#

{
   LoadDynamicModuleWithSpec
   Memcheck:Leak
   fun:malloc
   ...
   fun:_PyImport_LoadDynamicModuleWithSpec
}

{
   LoadDynamicModuleWithSpec
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_PyImport_LoadDynamicModuleWithSpec
}

#
# swig (false positives?)
#

{
   swig
   Memcheck:Leak
   fun:malloc
   fun:SwigPyClientData_New
}

#
# wcstombs
#

{
   wcstombs-__wcsnlen_avx2
   Memcheck:Cond
   fun:__wcsnlen_avx2
   ...
   fun:wcstombs
}

{
   wcstombs-internal_utf8_loop
   Memcheck:Cond
   fun:internal_utf8_loop
   ...
   fun:wcstombs
}

#
# epoll_ctl
#

{
   epoll_ctl
   Memcheck:Param
   epoll_ctl(event)
   fun:epoll_ctl
}

#
# other
#

{
   other
   Memcheck:Cond
   fun:PyUnicode_Decode
   fun:PyUnicode_FromEncodedObject
   ...
}

{
   other
   Memcheck:Cond
   obj:/usr/bin/python3.?
   obj:/usr/bin/python3.?
   fun:_PyEval_EvalFrameDefault
   fun:_PyEval_EvalCodeWithName
   fun:_PyFunction_Vectorcall
   fun:_PyEval_EvalFrameDefault
   fun:_PyEval_EvalCodeWithName
   fun:_PyFunction_Vectorcall
   fun:_PyEval_EvalFrameDefault
   obj:/usr/bin/python3.?
   fun:_PyEval_EvalFrameDefault
   obj:/usr/bin/python3.?
}

{
   other
   Memcheck:Value8
   obj:/usr/bin/python3.?
   ...
   obj:/usr/bin/python3.?
   fun:__Pyx_PyObject_Call
   fun:__Pyx__PyObject_CallOneArg
}

{
   other
   Memcheck:Value8
   ...
   fun:PyBytes_Repr
   fun:PyObject_Str
   ...
   fun:PyObject_Format
   ...
}

{
   other
   Memcheck:Cond
   ...
   fun:PyBytes_Repr
   fun:PyObject_Str
   ...
   fun:PyObject_Format
   ...
}

{
   _Py_HashBytes
   Memcheck:Cond
   ...
   fun:_Py_HashBytes
   ...
}

{
   _Py_HashBytes
   Memcheck:Value8
   ...
   fun:_Py_HashBytes
   ...
}

{
   PyDict_SetItem
   Memcheck:Cond
   fun:PyDict_SetItem
   ...
}

{
   PyDict_SetItem
   Memcheck:Value8
   ...
   fun:PyDict_SetItem
   ...
}

{
   tuplehash
   Memcheck:Cond
   fun:tuplehash
}

{
   _PyUnicodeWriter_WriteSubstring
   Memcheck:Cond
   ...
   fun:_PyUnicodeWriter_WriteSubstring
   fun:do_markup
   ...
}

{
   _PyUnicodeWriter_WriteSubstring
   Memcheck:Value8
   fun:memmove
   fun:_PyUnicodeWriter_WriteSubstring
   fun:do_markup
}

{
   sre_match
   Memcheck:Cond
   ...
   fun:sre_ucs1_match
   fun:sre_match
   ...
}

{
   sre_ucs1_count
   Memcheck:Value8
   ...
   fun:sre_ucs1_match
   fun:sre_match
}

{
   PyUnicode_Splitlines
   Memcheck:Cond
   fun:asciilib_splitlines
   fun:PyUnicode_Splitlines
}

{
   other
   Memcheck:Value8
   ...
   fun:PyBytes_Repr
   fun:PyObject_Str
   obj:/usr/bin/python3.?
   ...
   fun:PyObject_Format
   ...
}

{
   other
   Memcheck:Cond
   ...
   fun:_PyUnicodeWriter_WriteStr
   ...
}

{
   other
   Memcheck:Value8
   ...
   fun:_PyUnicodeWriter_WriteStr
   ...
}

{
   other
   Memcheck:Cond
   ...
   fun:PyUnicode_Append
   ...
}

{
   other
   Memcheck:Value8
   ...
   fun:PyUnicode_Append
   ...
}


{
   other
   Memcheck:Cond
   ...
   fun:_PyUnicodeWriter_Finish
   ...
}

{
   other
   Memcheck:Value8
   ...
   fun:_PyUnicodeWriter_Finish
   ...
}

{
   other
   Memcheck:Cond
   ...
   fun:_PyUnicode_JoinArray
   ...
}

{
   other
   Memcheck:Value8
   ...
   fun:_PyUnicode_JoinArray
   ...
}

{
   other
   Memcheck:Cond
   obj:/usr/bin/python3.?
   ...
   obj:/usr/bin/python3.?
   fun:__Pyx_PyObject_Call
   fun:__Pyx__PyObject_CallOneArg
   ...
}

{
   other
   Memcheck:Cond
   fun:memmove
   fun:unicode_concatenate
   ...
}

{
   other
   Memcheck:Value8
   fun:memmove
   fun:unicode_concatenate
   ...
}

{
   other
   Memcheck:Cond
   ...
   obj:/usr/bin/python3.?
   fun:_PyObject_CallMethodIdObjArgs
   obj:/usr/bin/python3.?
   ...
}

{
   dict_get_impl
   Memcheck:Cond
   ...
   fun:dict_get_impl
   fun:dict_get
   ...
}

{
   lookdict
   Memcheck:Value8
   ...
   fun:lookdict
   ...
}

{
   other
   Memcheck:Value8
   ...
   obj:/usr/bin/python3.?
   fun:_PyObject_CallMethodIdObjArgs
   obj:/usr/bin/python3.?
   ...
}

{
   other
   Memcheck:Cond
   ...
   fun:PyDict_SetItem
   ...
}

{
   other
   Memcheck:Value8
   ...
   obj:/usr/bin/python3.?
   fun:PyDict_SetItem
   obj:/usr/bin/python3.?
   ...
}

{
   other
   Memcheck:Cond
   obj:/usr/bin/python3.?
   ...
   obj:/usr/bin/python3.?
}

{
   other
   Memcheck:Cond
   fun:realloc
   obj:/usr/bin/python3.?
   ...
   fun:_PyFunction_Vectorcall
}

{
   other
   Memcheck:Value8
   obj:/usr/bin/python3.?
   ...
   obj:/usr/bin/python3.?
}

{
   other
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   obj:/usr/bin/python3.?
   fun:_PyObject_MakeTpCall
}

{
   other
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   obj:/usr/bin/python3.?
   obj:/usr/bin/python3.?
   fun:_PyObject_MakeTpCall
}

{
   other
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   obj:/usr/bin/python3.?
   ...
   fun:PyTuple_New
   ...
}

{
   other
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   obj:/usr/bin/python3.?
   fun:PyList_AsTuple
}

{
   other
   Memcheck:Leak
   fun:realloc
   ...
   fun:_dl_catch_exception
}

{
   other
   Memcheck:Leak
   fun:malloc
   ...
   fun:_dl_catch_exception
}

{
   Pandas
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   obj:*site-packages/pandas/_libs/*.cpython-3*-x86_64-linux-gnu.so
   ...
}

{
   Scipy extensions
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   obj:*/site-packages/scipy/*.cpython-3*-x86_64-linux-gnu.so
   ...
}


{
   PyTuple_Pack
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   obj:/usr/bin/python3.*
   fun:PyTuple_Pack
   obj:/usr/bin/python3.*
   ...
}

{
   PyAST_CompileObject
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   obj:/usr/bin/python3.*
   ...
   fun:PyAST_CompileObject
   obj:/usr/bin/python3.*
   ...
}

{
   other
   Memcheck:Value8
   ...
   fun:PyDict_SetDefault
   ...
}

{
   other
   Memcheck:Cond
   ...
   fun:PyDict_SetDefault
   ...
}

{
   _PyObject_GC_Alloc
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:_PyObject_GC_Alloc
   ...
}

{
   unicode_eq
   Memcheck:Cond
   fun:bcmp
   fun:unicode_eq
   ...
}

{
   PyUnicode_Contains
   Memcheck:Cond
   fun:memchr
   fun:PyUnicode_Contains
   ...
}

{
   _Py_write
   Memcheck:Param
   write(buf)
   fun:__libc_write
   fun:write
   fun:_Py_write
   obj:/usr/bin/python3.*
}

{
   _PyObject_GC_New
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:_PyObject_GC_New
   ...
   obj:/usr/bin/python3.*
}


{
   Python lookdict
   Memcheck:Cond
   fun:lookdict
   fun:insertdict
   fun:warn_explicit.cold
   ...
}

{
   Python find_empty_slot
   Memcheck:Value8
   fun:find_empty_slot
   fun:insertdict
   fun:warn_explicit.cold
   ...
}

{
   Python dictkeys_set_index
   Memcheck:Value8
   fun:dictkeys_set_index
   fun:insertdict
   fun:warn_explicit.cold
   ...
}

{
   Python _copy_characters
   Memcheck:Cond
   fun:memmove
   fun:memcpy
   fun:_copy_characters
   fun:unicode_concatenate
   ...
}

{
   Python _copy_characters
   Memcheck:Value8
   fun:memmove
   fun:memcpy
   fun:_copy_characters
   fun:unicode_concatenate
   ...
}

{
   __libc_unwind_link_get
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:malloc
   fun:_dl_find_object_update
   fun:dl_open_worker_begin
   fun:_dl_catch_exception
   fun:dl_open_worker
   fun:_dl_catch_exception
   fun:_dl_open
   fun:do_dlopen
   fun:_dl_catch_exception
   fun:_dl_catch_error
   fun:dlerror_run
   fun:__libc_dlopen_mode
   fun:__libc_unwind_link_get
   fun:__libc_unwind_link_get
}

{
   dlopen_implementation
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:malloc
   fun:_dl_map_object_deps
   fun:dl_open_worker_begin
   fun:_dl_catch_exception
   fun:dl_open_worker
   fun:_dl_catch_exception
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_exception
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen_implementation
   fun:dlopen@@GLIBC_2.34
}

{
   dlopen_implementation
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:malloc
   fun:resize_scopes
   fun:dl_open_worker_begin
   fun:_dl_catch_exception
   fun:dl_open_worker
   fun:_dl_catch_exception
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_exception
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen_implementation
   fun:dlopen@@GLIBC_2.34
   fun:_PyImport_FindSharedFuncptr
}
