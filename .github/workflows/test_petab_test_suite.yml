name: PEtab
on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - master
      - develop
  merge_group:
  workflow_dispatch:

jobs:
  build:
    name: PEtab Testsuite

    runs-on: ubuntu-22.04

    env:
      ENABLE_GCOV_COVERAGE: TRUE

    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 20

      - name: Install apt dependencies
        uses: ./.github/actions/install-apt-dependencies

      # install dependencies
      - name: apt
        run: |
          sudo apt-get update \
            && sudo apt-get install -y python3-venv

      - name: Build BNGL
        run: scripts/buildBNGL.sh

      - run: |
          echo "${HOME}/.local/bin/" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/tests/performance/" >> $GITHUB_PATH
          echo "BNGPATH=${GITHUB_WORKSPACE}/ThirdParty/BioNetGen-2.7.0" >> $GITHUB_ENV

      # install AMICI
      - name: Install python package
        run: scripts/installAmiciSource.sh

      - name: Install petab
        run: |
          source ./build/venv/bin/activate \
            && pip3 install wheel pytest shyaml pytest-cov pysb

      # retrieve test models
      - name: Download and install PEtab test suite
        run: |
          git clone --depth 1 --branch main \
            https://github.com/PEtab-dev/petab_test_suite \
            && source ./build/venv/bin/activate \
            && cd petab_test_suite && pip3 install -e .

      - name: Run PEtab-related unit tests
        run: |
          source ./build/venv/bin/activate \
            && pytest --cov-report=xml:coverage.xml \
              --cov=./ python/tests/test_*petab*.py python/tests/petab/

      # run test models
      - name: Run PEtab test suite
        run: |
          source ./build/venv/bin/activate \
          && AMICI_PARALLEL_COMPILE="" pytest -v \
            --cov-report=xml:coverage.xml \
            --cov-append \
            --cov=amici \
            tests/petab_test_suite/

      - name: Codecov
        if: github.event_name == 'pull_request' || github.repository_owner == 'AMICI-dev'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: petab
          fail_ci_if_error: true
