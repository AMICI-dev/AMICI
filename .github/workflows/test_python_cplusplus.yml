name: C++/Python Tests
on:
  push:
  merge_group:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      # TODO: remove before merge
      - develop

jobs:
  build:
    name: Tests Ubuntu

    # TODO: prepare image with more deps preinstalled
    runs-on: ubuntu-22.04

    env:
      AMICI_PARALLEL_COMPILE: ""
      ENABLE_GCOV_COVERAGE: "TRUE"
      CI_SONARCLOUD: "TRUE"

    strategy:
      matrix:
        python-version: [ 3.8 ]

    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/checkout@v3
    - run: git fetch --prune --unshallow

    - run: echo "AMICI_DIR=$(pwd)" >> $GITHUB_ENV
    - run: echo "BNGPATH=${GITHUB_WORKSPACE}/ThirdParty/BioNetGen-2.7.0" >> $GITHUB_ENV

    # sonar cloud
    - run: echo "SONAR_SCANNER_VERSION=4.6.2.2472" >> $GITHUB_ENV
    - run: echo "SONAR_SCANNER_HOME=${HOME}/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux" >> $GITHUB_ENV
    - run: echo "SONAR_SCANNER_OPTS=-server" >> $GITHUB_ENV
    - run: echo "${SONAR_SCANNER_HOME}/bin" >> $GITHUB_PATH
    - run: echo "${HOME}/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH

    # TODO: add to ci image
    - name: Install sonarcloud tools
      run: |
        sudo apt-get install nodejs curl unzip \
        && curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip \
          https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip \
        && unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/ \
        && curl --create-dirs -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip \
          https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip \
        && unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/ \

    # install amici dependencies
    - name: apt
      run: |
        sudo apt-get update \
          && sudo apt-get install -y \
            cmake \
            g++ \
            libatlas-base-dev \
            libboost-serialization-dev \
            libboost-chrono-dev \
            libhdf5-serial-dev \
            python3-venv \
            swig \
            lcov \
            libboost-math-dev

    - name: Build AMICI dependencies
      run: |
        scripts/buildDependencies.sh

    - name: Build AMICI
      run: |
        CI_SONARCLOUD=TRUE scripts/buildAmici.sh

    - name: Cache sonar files
      id: cache-sonar
      uses: actions/cache@v3
      with:
        path: sonar_cache
        key: ${{ runner.os }}-sonar_cache

    - name: C++ tests
      run: |
        scripts/run-cpp-tests.sh

    - name: Install python package
      run: |
        scripts/installAmiciSource.sh

    - name: example notebooks
      run: |
        scripts/runNotebook.sh python/examples/example_splines_swameye/

    - name: "Upload artifact"
      uses: actions/upload-artifact@v3
      with:
        name: models
        path: '**/amici_models/'
