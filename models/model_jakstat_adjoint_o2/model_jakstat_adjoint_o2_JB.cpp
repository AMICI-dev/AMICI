
#include <include/symbolic_functions.h>
#include <include/amici.h>
#include <include/amici_model.h>
#include <string.h>
#include <include/tdata.h>
#include <include/udata.h>
#include "model_jakstat_adjoint_o2_dwdx.h"
#include "model_jakstat_adjoint_o2_w.h"

int JB_model_jakstat_adjoint_o2(long int NeqBdot, realtype t, realtype cj, N_Vector x, N_Vector dx, N_Vector xB, N_Vector dxB, N_Vector xBdot, DlsMat JB, void *user_data, N_Vector tmp1B, N_Vector tmp2B, N_Vector tmp3B) {
int status = 0;
TempData *tdata = (TempData*) user_data;
Model *model = (Model*) tdata->model;
UserData *udata = (UserData*) tdata->udata;
realtype *x_tmp = nullptr;
if(x)
    x_tmp = N_VGetArrayPointer(x);
realtype *dx_tmp = nullptr;
if(dx)
    dx_tmp = N_VGetArrayPointer(dx);
realtype *xB_tmp = nullptr;
if(xB)
    xB_tmp = N_VGetArrayPointer(xB);
realtype *dxB_tmp = nullptr;
if(dxB)
    dxB_tmp = N_VGetArrayPointer(dxB);
realtype *xBdot_tmp = nullptr;
if(xBdot)
    xBdot_tmp = N_VGetArrayPointer(xBdot);
  memset(JB->data,0,sizeof(realtype)*26244);
status = w_model_jakstat_adjoint_o2(t,x,NULL,tdata);
status = dwdx_model_jakstat_adjoint_o2(t,x,NULL,user_data);
  JB->data[0+0*162] = udata->k[0]*tdata->p[0]*tdata->w[0]*tdata->w[2];
  JB->data[0+1*162] = -tdata->p[0]*tdata->w[0];
  JB->data[1+1*162] = tdata->p[1]*tdata->dwdx[0]*2.0;
  JB->data[1+2*162] = -tdata->p[1]*tdata->dwdx[0];
  JB->data[2+2*162] = tdata->p[2];
  JB->data[2+3*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[3+3*162] = udata->k[1]*tdata->p[3]*tdata->w[3];
  JB->data[3+4*162] = -tdata->p[3]*tdata->dwdx[1];
  JB->data[4+4*162] = tdata->p[3];
  JB->data[4+5*162] = -tdata->p[3];
  JB->data[5+5*162] = tdata->p[3];
  JB->data[5+6*162] = -tdata->p[3];
  JB->data[6+6*162] = tdata->p[3];
  JB->data[6+7*162] = -tdata->p[3];
  JB->data[7+7*162] = tdata->p[3];
  JB->data[7+8*162] = -tdata->p[3];
  JB->data[8+0*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[8+8*162] = tdata->p[3];
  JB->data[9+0*162] = tdata->w[0];
  JB->data[9+1*162] = -tdata->w[0];
  JB->data[9+9*162] = tdata->p[0]*tdata->w[0];
  JB->data[9+10*162] = -tdata->p[0]*tdata->w[0];
  JB->data[10+1*162] = tdata->p[1]*x_tmp[10]*4.0;
  JB->data[10+2*162] = tdata->p[1]*x_tmp[10]*-2.0;
  JB->data[10+10*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[10+11*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[11+11*162] = tdata->p[2];
  JB->data[11+12*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[12+12*162] = tdata->p[3];
  JB->data[12+13*162] = tdata->p[3]*-2.0;
  JB->data[13+13*162] = tdata->p[3];
  JB->data[13+14*162] = -tdata->p[3];
  JB->data[14+14*162] = tdata->p[3];
  JB->data[14+15*162] = -tdata->p[3];
  JB->data[15+15*162] = tdata->p[3];
  JB->data[15+16*162] = -tdata->p[3];
  JB->data[16+16*162] = tdata->p[3];
  JB->data[16+17*162] = -tdata->p[3];
  JB->data[17+9*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[17+17*162] = tdata->p[3];
  JB->data[18+18*162] = tdata->p[0]*tdata->w[0];
  JB->data[18+19*162] = -tdata->p[0]*tdata->w[0];
  JB->data[19+1*162] = tdata->dwdx[0]*2.0+tdata->p[1]*x_tmp[19]*4.0;
  JB->data[19+2*162] = -tdata->dwdx[0]-tdata->p[1]*x_tmp[19]*2.0;
  JB->data[19+19*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[19+20*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[20+20*162] = tdata->p[2];
  JB->data[20+21*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[21+21*162] = tdata->p[3];
  JB->data[21+22*162] = tdata->p[3]*-2.0;
  JB->data[22+22*162] = tdata->p[3];
  JB->data[22+23*162] = -tdata->p[3];
  JB->data[23+23*162] = tdata->p[3];
  JB->data[23+24*162] = -tdata->p[3];
  JB->data[24+24*162] = tdata->p[3];
  JB->data[24+25*162] = -tdata->p[3];
  JB->data[25+25*162] = tdata->p[3];
  JB->data[25+26*162] = -tdata->p[3];
  JB->data[26+18*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[26+26*162] = tdata->p[3];
  JB->data[27+27*162] = tdata->p[0]*tdata->w[0];
  JB->data[27+28*162] = -tdata->p[0]*tdata->w[0];
  JB->data[28+1*162] = tdata->p[1]*x_tmp[28]*4.0;
  JB->data[28+2*162] = tdata->p[1]*x_tmp[28]*-2.0;
  JB->data[28+28*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[28+29*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[29+2*162] = 1.0;
  JB->data[29+3*162] = -udata->k[0]*tdata->w[3];
  JB->data[29+29*162] = tdata->p[2];
  JB->data[29+30*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[30+30*162] = tdata->p[3];
  JB->data[30+31*162] = tdata->p[3]*-2.0;
  JB->data[31+31*162] = tdata->p[3];
  JB->data[31+32*162] = -tdata->p[3];
  JB->data[32+32*162] = tdata->p[3];
  JB->data[32+33*162] = -tdata->p[3];
  JB->data[33+33*162] = tdata->p[3];
  JB->data[33+34*162] = -tdata->p[3];
  JB->data[34+34*162] = tdata->p[3];
  JB->data[34+35*162] = -tdata->p[3];
  JB->data[35+27*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[35+35*162] = tdata->p[3];
  JB->data[36+36*162] = tdata->p[0]*tdata->w[0];
  JB->data[36+37*162] = -tdata->p[0]*tdata->w[0];
  JB->data[37+1*162] = tdata->p[1]*x_tmp[37]*4.0;
  JB->data[37+2*162] = tdata->p[1]*x_tmp[37]*-2.0;
  JB->data[37+37*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[37+38*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[38+38*162] = tdata->p[2];
  JB->data[38+39*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[39+3*162] = 1.0;
  JB->data[39+4*162] = -tdata->dwdx[1];
  JB->data[39+39*162] = tdata->p[3];
  JB->data[39+40*162] = tdata->p[3]*-2.0;
  JB->data[40+4*162] = 1.0;
  JB->data[40+5*162] = -1.0;
  JB->data[40+40*162] = tdata->p[3];
  JB->data[40+41*162] = -tdata->p[3];
  JB->data[41+5*162] = 1.0;
  JB->data[41+6*162] = -1.0;
  JB->data[41+41*162] = tdata->p[3];
  JB->data[41+42*162] = -tdata->p[3];
  JB->data[42+6*162] = 1.0;
  JB->data[42+7*162] = -1.0;
  JB->data[42+42*162] = tdata->p[3];
  JB->data[42+43*162] = -tdata->p[3];
  JB->data[43+7*162] = 1.0;
  JB->data[43+8*162] = -1.0;
  JB->data[43+43*162] = tdata->p[3];
  JB->data[43+44*162] = -tdata->p[3];
  JB->data[44+0*162] = -udata->k[1]*tdata->w[2];
  JB->data[44+8*162] = 1.0;
  JB->data[44+36*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[44+44*162] = tdata->p[3];
  JB->data[45+45*162] = tdata->p[0]*tdata->w[0];
  JB->data[45+46*162] = -tdata->p[0]*tdata->w[0];
  JB->data[46+1*162] = tdata->p[1]*x_tmp[46]*4.0;
  JB->data[46+2*162] = tdata->p[1]*x_tmp[46]*-2.0;
  JB->data[46+46*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[46+47*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[47+47*162] = tdata->p[2];
  JB->data[47+48*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[48+48*162] = tdata->p[3];
  JB->data[48+49*162] = tdata->p[3]*-2.0;
  JB->data[49+49*162] = tdata->p[3];
  JB->data[49+50*162] = -tdata->p[3];
  JB->data[50+50*162] = tdata->p[3];
  JB->data[50+51*162] = -tdata->p[3];
  JB->data[51+51*162] = tdata->p[3];
  JB->data[51+52*162] = -tdata->p[3];
  JB->data[52+52*162] = tdata->p[3];
  JB->data[52+53*162] = -tdata->p[3];
  JB->data[53+45*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[53+53*162] = tdata->p[3];
  JB->data[54+0*162] = tdata->p[0]*tdata->w[5];
  JB->data[54+1*162] = -tdata->p[0]*tdata->w[5];
  JB->data[54+54*162] = tdata->p[0]*tdata->w[0];
  JB->data[54+55*162] = -tdata->p[0]*tdata->w[0];
  JB->data[55+1*162] = tdata->p[1]*x_tmp[55]*4.0;
  JB->data[55+2*162] = tdata->p[1]*x_tmp[55]*-2.0;
  JB->data[55+55*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[55+56*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[56+56*162] = tdata->p[2];
  JB->data[56+57*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[57+57*162] = tdata->p[3];
  JB->data[57+58*162] = tdata->p[3]*-2.0;
  JB->data[58+58*162] = tdata->p[3];
  JB->data[58+59*162] = -tdata->p[3];
  JB->data[59+59*162] = tdata->p[3];
  JB->data[59+60*162] = -tdata->p[3];
  JB->data[60+60*162] = tdata->p[3];
  JB->data[60+61*162] = -tdata->p[3];
  JB->data[61+61*162] = tdata->p[3];
  JB->data[61+62*162] = -tdata->p[3];
  JB->data[62+54*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[62+62*162] = tdata->p[3];
  JB->data[63+0*162] = tdata->p[0]*tdata->w[6];
  JB->data[63+1*162] = -tdata->p[0]*tdata->w[6];
  JB->data[63+63*162] = tdata->p[0]*tdata->w[0];
  JB->data[63+64*162] = -tdata->p[0]*tdata->w[0];
  JB->data[64+1*162] = tdata->p[1]*x_tmp[64]*4.0;
  JB->data[64+2*162] = tdata->p[1]*x_tmp[64]*-2.0;
  JB->data[64+64*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[64+65*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[65+65*162] = tdata->p[2];
  JB->data[65+66*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[66+66*162] = tdata->p[3];
  JB->data[66+67*162] = tdata->p[3]*-2.0;
  JB->data[67+67*162] = tdata->p[3];
  JB->data[67+68*162] = -tdata->p[3];
  JB->data[68+68*162] = tdata->p[3];
  JB->data[68+69*162] = -tdata->p[3];
  JB->data[69+69*162] = tdata->p[3];
  JB->data[69+70*162] = -tdata->p[3];
  JB->data[70+70*162] = tdata->p[3];
  JB->data[70+71*162] = -tdata->p[3];
  JB->data[71+63*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[71+71*162] = tdata->p[3];
  JB->data[72+0*162] = tdata->p[0]*tdata->w[7];
  JB->data[72+1*162] = -tdata->p[0]*tdata->w[7];
  JB->data[72+72*162] = tdata->p[0]*tdata->w[0];
  JB->data[72+73*162] = -tdata->p[0]*tdata->w[0];
  JB->data[73+1*162] = tdata->p[1]*x_tmp[73]*4.0;
  JB->data[73+2*162] = tdata->p[1]*x_tmp[73]*-2.0;
  JB->data[73+73*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[73+74*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[74+74*162] = tdata->p[2];
  JB->data[74+75*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[75+75*162] = tdata->p[3];
  JB->data[75+76*162] = tdata->p[3]*-2.0;
  JB->data[76+76*162] = tdata->p[3];
  JB->data[76+77*162] = -tdata->p[3];
  JB->data[77+77*162] = tdata->p[3];
  JB->data[77+78*162] = -tdata->p[3];
  JB->data[78+78*162] = tdata->p[3];
  JB->data[78+79*162] = -tdata->p[3];
  JB->data[79+79*162] = tdata->p[3];
  JB->data[79+80*162] = -tdata->p[3];
  JB->data[80+72*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[80+80*162] = tdata->p[3];
  JB->data[81+0*162] = tdata->p[0]*tdata->w[8];
  JB->data[81+1*162] = -tdata->p[0]*tdata->w[8];
  JB->data[81+81*162] = tdata->p[0]*tdata->w[0];
  JB->data[81+82*162] = -tdata->p[0]*tdata->w[0];
  JB->data[82+1*162] = tdata->p[1]*x_tmp[82]*4.0;
  JB->data[82+2*162] = tdata->p[1]*x_tmp[82]*-2.0;
  JB->data[82+82*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[82+83*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[83+83*162] = tdata->p[2];
  JB->data[83+84*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[84+84*162] = tdata->p[3];
  JB->data[84+85*162] = tdata->p[3]*-2.0;
  JB->data[85+85*162] = tdata->p[3];
  JB->data[85+86*162] = -tdata->p[3];
  JB->data[86+86*162] = tdata->p[3];
  JB->data[86+87*162] = -tdata->p[3];
  JB->data[87+87*162] = tdata->p[3];
  JB->data[87+88*162] = -tdata->p[3];
  JB->data[88+88*162] = tdata->p[3];
  JB->data[88+89*162] = -tdata->p[3];
  JB->data[89+81*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[89+89*162] = tdata->p[3];
  JB->data[90+0*162] = tdata->p[0]*tdata->w[9];
  JB->data[90+1*162] = -tdata->p[0]*tdata->w[9];
  JB->data[90+90*162] = tdata->p[0]*tdata->w[0];
  JB->data[90+91*162] = -tdata->p[0]*tdata->w[0];
  JB->data[91+1*162] = tdata->p[1]*x_tmp[91]*4.0;
  JB->data[91+2*162] = tdata->p[1]*x_tmp[91]*-2.0;
  JB->data[91+91*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[91+92*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[92+92*162] = tdata->p[2];
  JB->data[92+93*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[93+93*162] = tdata->p[3];
  JB->data[93+94*162] = tdata->p[3]*-2.0;
  JB->data[94+94*162] = tdata->p[3];
  JB->data[94+95*162] = -tdata->p[3];
  JB->data[95+95*162] = tdata->p[3];
  JB->data[95+96*162] = -tdata->p[3];
  JB->data[96+96*162] = tdata->p[3];
  JB->data[96+97*162] = -tdata->p[3];
  JB->data[97+97*162] = tdata->p[3];
  JB->data[97+98*162] = -tdata->p[3];
  JB->data[98+90*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[98+98*162] = tdata->p[3];
  JB->data[99+99*162] = tdata->p[0]*tdata->w[0];
  JB->data[99+100*162] = -tdata->p[0]*tdata->w[0];
  JB->data[100+1*162] = tdata->p[1]*x_tmp[100]*4.0;
  JB->data[100+2*162] = tdata->p[1]*x_tmp[100]*-2.0;
  JB->data[100+100*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[100+101*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[101+101*162] = tdata->p[2];
  JB->data[101+102*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[102+102*162] = tdata->p[3];
  JB->data[102+103*162] = tdata->p[3]*-2.0;
  JB->data[103+103*162] = tdata->p[3];
  JB->data[103+104*162] = -tdata->p[3];
  JB->data[104+104*162] = tdata->p[3];
  JB->data[104+105*162] = -tdata->p[3];
  JB->data[105+105*162] = tdata->p[3];
  JB->data[105+106*162] = -tdata->p[3];
  JB->data[106+106*162] = tdata->p[3];
  JB->data[106+107*162] = -tdata->p[3];
  JB->data[107+99*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[107+107*162] = tdata->p[3];
  JB->data[108+108*162] = tdata->p[0]*tdata->w[0];
  JB->data[108+109*162] = -tdata->p[0]*tdata->w[0];
  JB->data[109+1*162] = tdata->p[1]*x_tmp[109]*4.0;
  JB->data[109+2*162] = tdata->p[1]*x_tmp[109]*-2.0;
  JB->data[109+109*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[109+110*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[110+110*162] = tdata->p[2];
  JB->data[110+111*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[111+111*162] = tdata->p[3];
  JB->data[111+112*162] = tdata->p[3]*-2.0;
  JB->data[112+112*162] = tdata->p[3];
  JB->data[112+113*162] = -tdata->p[3];
  JB->data[113+113*162] = tdata->p[3];
  JB->data[113+114*162] = -tdata->p[3];
  JB->data[114+114*162] = tdata->p[3];
  JB->data[114+115*162] = -tdata->p[3];
  JB->data[115+115*162] = tdata->p[3];
  JB->data[115+116*162] = -tdata->p[3];
  JB->data[116+108*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[116+116*162] = tdata->p[3];
  JB->data[117+117*162] = tdata->p[0]*tdata->w[0];
  JB->data[117+118*162] = -tdata->p[0]*tdata->w[0];
  JB->data[118+1*162] = tdata->p[1]*x_tmp[118]*4.0;
  JB->data[118+2*162] = tdata->p[1]*x_tmp[118]*-2.0;
  JB->data[118+118*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[118+119*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[119+119*162] = tdata->p[2];
  JB->data[119+120*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[120+120*162] = tdata->p[3];
  JB->data[120+121*162] = tdata->p[3]*-2.0;
  JB->data[121+121*162] = tdata->p[3];
  JB->data[121+122*162] = -tdata->p[3];
  JB->data[122+122*162] = tdata->p[3];
  JB->data[122+123*162] = -tdata->p[3];
  JB->data[123+123*162] = tdata->p[3];
  JB->data[123+124*162] = -tdata->p[3];
  JB->data[124+124*162] = tdata->p[3];
  JB->data[124+125*162] = -tdata->p[3];
  JB->data[125+117*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[125+125*162] = tdata->p[3];
  JB->data[126+126*162] = tdata->p[0]*tdata->w[0];
  JB->data[126+127*162] = -tdata->p[0]*tdata->w[0];
  JB->data[127+1*162] = tdata->p[1]*x_tmp[127]*4.0;
  JB->data[127+2*162] = tdata->p[1]*x_tmp[127]*-2.0;
  JB->data[127+127*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[127+128*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[128+128*162] = tdata->p[2];
  JB->data[128+129*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[129+129*162] = tdata->p[3];
  JB->data[129+130*162] = tdata->p[3]*-2.0;
  JB->data[130+130*162] = tdata->p[3];
  JB->data[130+131*162] = -tdata->p[3];
  JB->data[131+131*162] = tdata->p[3];
  JB->data[131+132*162] = -tdata->p[3];
  JB->data[132+132*162] = tdata->p[3];
  JB->data[132+133*162] = -tdata->p[3];
  JB->data[133+133*162] = tdata->p[3];
  JB->data[133+134*162] = -tdata->p[3];
  JB->data[134+126*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[134+134*162] = tdata->p[3];
  JB->data[135+135*162] = tdata->p[0]*tdata->w[0];
  JB->data[135+136*162] = -tdata->p[0]*tdata->w[0];
  JB->data[136+1*162] = tdata->p[1]*x_tmp[136]*4.0;
  JB->data[136+2*162] = tdata->p[1]*x_tmp[136]*-2.0;
  JB->data[136+136*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[136+137*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[137+137*162] = tdata->p[2];
  JB->data[137+138*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[138+138*162] = tdata->p[3];
  JB->data[138+139*162] = tdata->p[3]*-2.0;
  JB->data[139+139*162] = tdata->p[3];
  JB->data[139+140*162] = -tdata->p[3];
  JB->data[140+140*162] = tdata->p[3];
  JB->data[140+141*162] = -tdata->p[3];
  JB->data[141+141*162] = tdata->p[3];
  JB->data[141+142*162] = -tdata->p[3];
  JB->data[142+142*162] = tdata->p[3];
  JB->data[142+143*162] = -tdata->p[3];
  JB->data[143+135*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[143+143*162] = tdata->p[3];
  JB->data[144+144*162] = tdata->p[0]*tdata->w[0];
  JB->data[144+145*162] = -tdata->p[0]*tdata->w[0];
  JB->data[145+1*162] = tdata->p[1]*x_tmp[145]*4.0;
  JB->data[145+2*162] = tdata->p[1]*x_tmp[145]*-2.0;
  JB->data[145+145*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[145+146*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[146+146*162] = tdata->p[2];
  JB->data[146+147*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[147+147*162] = tdata->p[3];
  JB->data[147+148*162] = tdata->p[3]*-2.0;
  JB->data[148+148*162] = tdata->p[3];
  JB->data[148+149*162] = -tdata->p[3];
  JB->data[149+149*162] = tdata->p[3];
  JB->data[149+150*162] = -tdata->p[3];
  JB->data[150+150*162] = tdata->p[3];
  JB->data[150+151*162] = -tdata->p[3];
  JB->data[151+151*162] = tdata->p[3];
  JB->data[151+152*162] = -tdata->p[3];
  JB->data[152+144*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[152+152*162] = tdata->p[3];
  JB->data[153+153*162] = tdata->p[0]*tdata->w[0];
  JB->data[153+154*162] = -tdata->p[0]*tdata->w[0];
  JB->data[154+1*162] = tdata->p[1]*x_tmp[154]*4.0;
  JB->data[154+2*162] = tdata->p[1]*x_tmp[154]*-2.0;
  JB->data[154+154*162] = tdata->p[1]*x_tmp[1]*4.0;
  JB->data[154+155*162] = tdata->p[1]*x_tmp[1]*-2.0;
  JB->data[155+155*162] = tdata->p[2];
  JB->data[155+156*162] = -udata->k[0]*tdata->p[2]*tdata->w[3];
  JB->data[156+156*162] = tdata->p[3];
  JB->data[156+157*162] = tdata->p[3]*-2.0;
  JB->data[157+157*162] = tdata->p[3];
  JB->data[157+158*162] = -tdata->p[3];
  JB->data[158+158*162] = tdata->p[3];
  JB->data[158+159*162] = -tdata->p[3];
  JB->data[159+159*162] = tdata->p[3];
  JB->data[159+160*162] = -tdata->p[3];
  JB->data[160+160*162] = tdata->p[3];
  JB->data[160+161*162] = -tdata->p[3];
  JB->data[161+153*162] = -udata->k[1]*tdata->p[3]*tdata->w[2];
  JB->data[161+161*162] = tdata->p[3];
return(status);

}


